apollo.meta=http://test2:8081
logging.level.root=DEBUG
#swagger.enable=off
## mysql readwrite数据源
#readwritedb.enable=on
#
#jdbc.readwrite.driverClassName=com.mysql.jdbc.Driver
#jdbc.readwrite.jdbcUrl=jdbc:mysql://dev:3306/hjm_pay?useUnicode=true&characterEncoding=utf8
#jdbc.readwrite.username=hjm_dev
#jdbc.readwrite.password=hjm_dev
#jdbc.readwrite.connectionTimeout=5000
#jdbc.readwrite.idleTimeout=1000
#jdbc.readwrite.maximumPoolSize=50
#jdbc.readwrite.minimumIdle=5
## read 数据源
#readdb.enable=on
#jdbc.read.driverClassName=com.mysql.jdbc.Driver
#jdbc.read.jdbcUrl=jdbc:mysql://dev:3306/hjm?useUnicode=true&characterEncoding=utf8
#jdbc.read.username=hjm_dev
#jdbc.read.password=hjm_dev
#jdbc.read.connectionTimeout=5000
#jdbc.read.idleTimeout=1000
#jdbc.read.maximumPoolSize=50
#jdbc.read.minimumIdle=5
#
##redis
## public redis
#public.redis.host=test2
#public.redis.port=6379
#public.redis.password=
## 连接超时时间（毫秒）
#public.redis.timeout=10000
## dev环境用的是2 真是吊的不行,共享内存还要分,namespace都没.吐槽下
#public.redis.database=2
## 连接池最大连接数（使用负值表示没有限制） 默认 8
#public.redis.max-active=12
## 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
#public.redis.max-wait=-1
## 连接池中的最大空闲连接 默认 8
#public.redis.max-idle=5
## 连接池中的最小空闲连接 默认 0
#public.redis.min-idle=0
## primary redis
#private.redis.host=test2
#private.redis.port=6379
#private.redis.password=
## 连接超时时间（毫秒）
#private.redis.timeout=10000
## dev环境用的是2 真是吊的不行,共享内存还要分,namespace都没.吐槽下
#private.redis.database=1
## 连接池最大连接数（使用负值表示没有限制） 默认 8
#private.redis.max-active=12
## 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
#private.redis.max-wait=-1
## 连接池中的最大空闲连接 默认 8
#private.redis.max-idle=5
## 连接池中的最小空闲连接 默认 0
#private.redis.min-idle=0
#
##es
#es.enable=on
#elasticsearch.clusterNodes=test_elk:9300
#elasticsearch.clusterName=testapplication
#elasticsearch.properties.transport.tcp.connect_timeout=120s
#elasticsearch.properties.client.transport.sniff=true
#elasticsearch.properties.client.transport.ping_timeout=5s
#elasticsearch.properties.client.transport.nodes_sampler_interval=5s
#elasticsearch.properties.client.transport.ignore_cluster_name=false
##连接超时的时间
#elasticsearch.readTimeout=5s
#spring.cloud.inetutils.ignored-interfaces[0]=lo*
#spring.cloud.inetutils.ignored-interfaces[1]=docker*
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.instance.instance-id=${spring.profiles.active}:${spring.application.name}:${server.port}
#eureka.instance.lease-expiration-duration-in-seconds=90
#eureka.instance.lease-renewal-interval-in-seconds=30
#eureka.client.service-url.defaultZone=http://@test2:4040/eureka
#eureka.instance.virtual-host-name=templateserver