def artifactId = 'aha-template-server'

springBoot {
    mainClassName = "com.aha.tech.TemplateApplication"
}
bootJar {
    baseName = "$artifactId"
}
tasks.withType(Jar) {
    destinationDir = file("../build/libs")
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE'
    }
}
//填写的依赖子项目共享依赖配置
dependencies {
    compile project(":template-spi")

    // spring boot and spring cloud dependency
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.cloud:spring-cloud-starter-config:2.0.1.RELEASE')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-turbine')

    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
    compile('io.github.openfeign:feign-httpclient')

    compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
    compile 'org.elasticsearch:elasticsearch:5.5.1'
    compile 'org.elasticsearch.client:transport:5.5.1'

    // redis dependency
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.apache.commons:commons-pool2')
    compile ('org.redisson:redisson:3.9.1')

    // kafka
    compile('org.springframework.kafka:spring-kafka')

    // jdbc
    compile('hikari-cp:hikari-cp:2.6.0')
    compile('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.5')
    compile('tk.mybatis:mapper-spring-boot-starter:2.0.3')
    compile('mysql:mysql-connector-java')

    // http
    compile('org.apache.httpcomponents:httpclient:4.5.6')
    compile('org.apache.httpcomponents:httpcore:4.4.10')
    // apollo config center
    compile('com.ctrip.framework.apollo:apollo-client:1.0.0')

    // test dependency
    testCompile("org.springframework.boot:spring-boot-starter-test")

    // serializer
    compile('com.esotericsoftware:kryo:4.0.2')
    compile('org.msgpack:msgpack-core:0.8.16')
    compile('org.msgpack:jackson-dataformat-msgpack:0.8.16')
    compile('de.javakaffee:kryo-serializers:0.42')

    // ahaschool
    compile('com.aha.spi:aha-account-spi:1.3.2')
    compile('com.aha.spi:aha-passport-spi:1.0.1')
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java","src/main/resources"]
        }
    }
}


install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$artifactId"
        pom.groupId = "$project.group"
    }
}
